{
	"info": {
		"_postman_id": "773c5c6a-9683-4a1a-8201-cb3d8d4a0506",
		"name": "back end capstone full stack",
		"description": "# Introduction\n\nThe Car Reservations API allows users to create, view, update, and delete reservations for available cars. Users can view the cars they have reserved, check the availability of a car on specific dates, and manage their own reservations.\n\n# Overview\n\n\\-The API is primarily designed for car reservation management.  \n\\-Users must be authenticated to access most functionalities, especially those that modify data.  \n\\-It is recommended to check the availability of a car before attempting to make a reservation.  \n\\-The API responds with standard HTTP status codes to indicate the success or failure of an operation.\n\n# Authentication\n\nThe API uses cookie-based tokens to authenticate users. Ensure you send the appropriate cookie with every request requiring authentication. Cookies should be flagged as HttpOnly and Secure for enhanced security.\n\n# Error Codes\n\nWhat errors and status codes can a user expect?\n\n\\-200 OK: The request was successful.  \n\\-201 Created: A new resource was successfully created (e.g., a new reservation).  \n\\-400 Bad Request: The request was invalid or malformed.  \n\\-401 Unauthorized: User needs to authenticate to access the resource.  \n\\-403 Forbidden: The authenticated user doesn't have permission to access the resource.  \n\\-404 Not Found: The requested resource was not found.  \n\\-422 Unprocessable Entity: The request was understood, but it contains invalid data.  \n\\-500 Internal Server Error: An error occurred on the server when processing the request.\n\n# Rate limit\n\nCurrently, there isn't a set limit on the number of requests a user can send.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30837886",
		"_collection_link": "https://winter-desert-419071.postman.co/workspace/My-Workspace~efdb5aba-9d35-41c3-848e-87060938ceb9/collection/19270283-773c5c6a-9683-4a1a-8201-cb3d8d4a0506?action=share&source=collection_link&creator=30837886"
	},
	"item": [
		{
			"name": "http://localhost:3000/api/cars/3",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/cars/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"cars",
						"3"
					]
				},
				"description": "Delete a car"
			},
			"response": []
		},
		{
			"name": "http://localhost:3000/api/cars/6",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/cars/6",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"cars",
						"6"
					]
				},
				"description": "Catch a car by id"
			},
			"response": []
		},
		{
			"name": "http://localhost:3000/api/cars",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/cars",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"cars"
					]
				},
				"description": "Catch all the cars"
			},
			"response": []
		},
		{
			"name": "http://localhost:3000/api/users",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"user\": {\n    \"name\": \"ccc\",\n    \"email\": \"ccc@ccc.com\",\n    \"password\": \"123456\"\n  }\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users"
					]
				},
				"description": "Sign in users (create an user)"
			},
			"response": []
		},
		{
			"name": "http://localhost:3000/api/login",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"bbb@bbb.com\",\n  \"password\": \"123456\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"login"
					]
				},
				"description": "Login an user (to open a session)"
			},
			"response": []
		},
		{
			"name": "http://localhost:3000/api/logout",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/logout",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"logout"
					]
				},
				"description": "Log out current user"
			},
			"response": []
		},
		{
			"name": "http://localhost:3000/api/user_reservations",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/user_reservations",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"user_reservations"
					]
				},
				"description": "All the reservations and cars reserved for the user..."
			},
			"response": []
		},
		{
			"name": "http://localhost:3000/api/cars/2/reservations",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"reservation\": {\n        \"start_time\": \"2023-10-28T14:00:00Z\",\n        \"end_time\": \"2023-10-29T14:00:00Z\",\n        \"city\": \"Copiapo\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/cars/2/reservations",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"cars",
						"2",
						"reservations"
					]
				},
				"description": "Add reservetion with autocomplete"
			},
			"response": []
		},
		{
			"name": "http://localhost:3000/api/reservations/2",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/reservations/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"reservations",
						"2"
					]
				},
				"description": "delete reservation"
			},
			"response": []
		},
		{
			"name": "http://localhost:3000/api/cars/4",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/cars/4",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"cars",
						"4"
					]
				},
				"description": "Delete a car"
			},
			"response": []
		},
		{
			"name": "http://localhost:3000/api/cars",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "car[name]",
							"value": "Car 5",
							"contentType": "",
							"type": "text"
						},
						{
							"key": "car[description]",
							"value": "This is a description for Car 5",
							"contentType": "",
							"type": "text"
						},
						{
							"key": "car[deposit]",
							"value": "1400",
							"contentType": "",
							"type": "text"
						},
						{
							"key": "car[finance_fee]",
							"value": "300",
							"contentType": "",
							"type": "text"
						},
						{
							"key": "car[option_to_purchase_fee]",
							"value": "500",
							"contentType": "",
							"type": "text"
						},
						{
							"key": "car[total_amount_payable]",
							"value": "1250",
							"contentType": "",
							"type": "text"
						},
						{
							"key": "car[duration]",
							"value": "17",
							"contentType": "",
							"type": "text"
						},
						{
							"key": "car[removed]",
							"value": "false",
							"contentType": "",
							"type": "text"
						},
						{
							"key": "car[image]",
							"contentType": "",
							"type": "file",
							"src": "/Users/claudiapatriciarojassoto/Desktop/car-5.png"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/api/cars",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"cars"
					]
				},
				"description": "Add a car with hash"
			},
			"response": []
		},
		{
			"name": "http://localhost:3000/api/cars",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "car[name]",
							"value": "Car 111",
							"contentType": "",
							"type": "text"
						},
						{
							"key": "car[description]",
							"value": "This is a description for Car 5",
							"contentType": "",
							"type": "text"
						},
						{
							"key": "car[deposit]",
							"value": "1400",
							"contentType": "",
							"type": "text"
						},
						{
							"key": "car[finance_fee]",
							"value": "300",
							"contentType": "",
							"type": "text"
						},
						{
							"key": "car[option_to_purchase_fee]",
							"value": "500",
							"contentType": "",
							"type": "text"
						},
						{
							"key": "car[total_amount_payable]",
							"value": "1250",
							"contentType": "",
							"type": "text"
						},
						{
							"key": "car[duration]",
							"value": "17",
							"contentType": "",
							"type": "text"
						},
						{
							"key": "car[removed]",
							"value": "false",
							"contentType": "",
							"type": "text"
						},
						{
							"key": "car[image]",
							"contentType": "",
							"type": "file",
							"src": "/Users/claudiapatriciarojassoto/Desktop/car-5.png"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/api/cars",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:3000/api/users",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users"
					]
				},
				"description": "List all the users"
			},
			"response": []
		},
		{
			"name": "http://localhost:3000/api/users/2",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/users/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"users",
						"2"
					]
				},
				"description": "List a ser information by id"
			},
			"response": []
		}
	]
}